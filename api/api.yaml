openapi: 3.0.0
info:
  title: Nuts Registry Admin API
  version: 1.0.0

paths:
  /web/auth:
    post:
      operationId: createSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSessionRequest"
      responses:
        '200':
          description: A session was succesfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSessionResponse"
        '403':
          description: Invalid credentials

  /web/private/customers:
    get:
      operationId: getCustomers
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomersResponse"
    post:
      operationId: connectCustomer
      description: Connect an existing customer ID to a new Nuts DID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectCustomerRequest"
      responses:
        200:
          description: The newly connected customer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  /web/private/customers/{id}:
    parameters:
      - name: id
        in: path
        description: internal customer id
        required: true
        example:
          - "C12"
        schema:
          type: string
    get:
      operationId: getCustomer
      responses:
        200:
          description: when all was fine
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      operationId: updateCustomer
      description: Update a customers name and activation status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - active
                - name
              properties:
                active:
                  type: boolean
                name:
                  type: string
                town:
                  type: string
      responses:
        200:
          description: when all was fine
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  /web/private/service-provider:
    get:
      operationId: getServiceProvider
      description: Get the information of the current service provider of the Nuts node
      responses:
        200:
          description: All the information of the current service provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceProvider"
    put:
      operationId: updateServiceProvider
      description: Update or create a new service provider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceProvider"
      responses:
        200:
          description: The resulting created service provider
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceProvider"

  /web/private/service-provider/endpoints:
    post:
      operationId: registerEndpoint
      description: Register endpoint URL on service provider's DID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Endpoint"
      responses:
        201:
          description: The resulting created endpoint.
  /web/private/service-provider/endpoints/{id}:
    parameters:
      - name: id
        in: path
        description: Endpoint id
        required: true
        example:
          - "did:nuts:123#abc"
        schema:
          type: string
    delete:
      operationId: deleteEndpoint
      responses:
        200:
          description: The endpoint has been deleted

  /web/private/credentials/issuers:
    get:
      operationId: getCredentialIssuers
      description: Get a list of credentials and their issuers sorted by trusted and untrusted issuers.
      responses:
        200:
          description: The result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialIssuers"
  /web/private/credential/{type}/issuer/{did}:
    parameters:
      - name: type
        in: path
        description: Credential type
        required: true
        example:
          - "NutsOrganizationCredential"
        schema:
          type: string
      - name: did
        in: path
        description: DID of the credential issuer
        required: true
        example:
          - "did:nuts:123"
        schema:
          type: string
    put:
      operationId: updateCredentialIssuer
      description: Update the trust status for a credential issuer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialIssuer"
      responses:
        200:
          description: When the change is accepted

components:
  schemas:
    CreateSessionRequest:
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: demo@nuts.nl
        password:
          type: string
    CreateSessionResponse:
      required:
        - token
      properties:
        token:
          type: string

    ConnectCustomerRequest:
      required:
        - id
        - name
      properties:
        id:
          type: string
          example: C12
        name:
          type: string
          example: "Good Care Org - Driebergen"
        town:
          type: string
          description: Used for issueing the NutsOrgCredential
          example: "Hengelo"
    CustomersResponse:
      type: array
      items:
        $ref: "#/components/schemas/Customer"
    Customer:
      type: object
      description: A customer object
      required:
        - id
        - did
        - name
        - active
      properties:
        id:
          type: string
          description: The internal customer ID.
          example: "C12"
        did:
          type: string
          description: The customer DID.
          example:
            "did:nuts:123"
        name:
          type: string
          description: Internal name for this customer.
        town:
          type: string
          description: Locality for this customer.
        domain:
          type: string
          description: The email domain of the care providers employees, required for logging in.
        active:
          type: boolean
          description: If a VC has been issued for this customer.

    ServiceProvider:
      type: object
      description: A service provider is a controller of other DID documents
      required:
        - id
        - name
        - phone
        - email
        - website
        - endpoints
      properties:
        id:
          description: The DID of the service provider
          type: string
          example: did:nuts:123
        name:
          description: The name of the service provider
          type: string
        phone:
          description: Number available for other service providers in the network to call in case of emergency
          type: string
        email:
          description: Email address available for other service providers in the network for getting support
          type: string
        website:
          description: Publicly reachable website address of the service provider
          type: string
        endpoints:
          description: Endpoints published by the service provider.
          type: array
          items:
            $ref: "#/components/schemas/Endpoint"
    Endpoint:
      type: object
      description: An endpoint registered on a DID Document.
      required:
        - type
        - url
      properties:
        id:
          description: ID of the endpoint which is calculated on creation.
          type: string
        type:
          description: Type of the endpoint.
          type: string
        url:
          description: URL of the endpoint.
          type: string
    CredentialIssuers:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: "#/components/schemas/CredentialIssuer"
    CredentialIssuer:
      type: object
      required:
        - trusted
        - serviceProvider
      properties:
        trusted:
          type: boolean
        serviceProvider:
          $ref: "#/components/schemas/ServiceProvider"